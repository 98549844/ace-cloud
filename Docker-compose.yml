#docker compose -f /Users/garlam/IdeaProjects/ace-cloud/Docker-compose.yml -p ace-cloud up -d
version: '3.8'
networks:
  ace-network: # 网络名
    name: ace-network
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

services:
  consul-1:
    image: consul:1.15.4
    container_name: consul-1
    hostname: consul-1
    restart: always
    ports:
      - 8500:8500
    environment:
      CONSUL_BIND_INTERFACE: eth0
    command: >
      agent 
      --server=true
      --bootstrap-expect=3
      --client=0.0.0.0
      --ui
      --node=consul-1
    networks:
      ace-network:
        ipv4_address: 172.20.0.2
    #  --advertise=192.168.1.2 绑定ip

  consul-2:
    image: consul:1.15.4
    container_name: consul-2
    hostname: consul-2
    restart: always
    ports:
      - 8501:8500
    environment:
      CONSUL_BIND_INTERFACE: eth0
    command: >
      agent 
      --server=true
      --bootstrap-expect=3
      --client=0.0.0.0
      --join consul-1
      --ui
      --node=consul-2
    depends_on:
      - consul-1
    networks:
      ace-network:
        ipv4_address: 172.20.0.3

  consul-3:
    image: consul:1.15.4
    container_name: consul-3
    hostname: consul-3
    restart: always
    ports:
      - 8502:8500
    environment:
      CONSUL_BIND_INTERFACE: eth0
    command: >
      agent 
      --server=true
      --bootstrap-expect=3
      --client=0.0.0.0
      --join consul-1
      --ui
      --node=consul-3
    depends_on:
      - consul-2
    networks:
      ace-network:
        ipv4_address: 172.20.0.4

  mysql8:
    image: mysql:latest
    container_name: mysql8
    hostname: mysql8
    restart: always
    environment:
      MYSQL_DATABASE: ace
      MYSQL_USER: garlam
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - 3306:3306
    depends_on:
      - consul-1
      - consul-2
      - consul-3
    networks:
      ace-network:
        ipv4_address: 172.20.0.5

  #  redis7:
  #    image: redis:latest
  #    container_name: redis7
  #    hostname: redis7
  #    restart: always
  #    ports:
  #      - 6379:6379
  #    depends_on:
  #      - consul-1
  #      - consul-2
  #      - consul-3
  #    networks:
  #      - ace-network

  seata2:
    image: seataio/seata-server:latest
    container_name: seata2
    hostname: seata2
    # restart: always
    ports:
      - "7091:7091"
      - "8091:8091"
    environment:
      - SEATA_PORT=8091
      - STORE_MODE=file
    depends_on:
      - consul-1
      - consul-2
      - consul-3
      - mysql8
    networks:
      - ace-network
    # 1. 要手动create seata table
    # 2. 要手动配置application.yml文件
    # 3. 在consul创建seata.properties key,
    #    并把config-center/config.txt的值保存到seata.properties key

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    hostname: zipkin
    ports:
      - 9411:9411
    depends_on:
      - consul-1
      - consul-2
      - consul-3
    networks:
      - ace-network

  ace-gateway:
    build:
      context: ./ace-gateway
      dockerfile: Dockerfile
    container_name: ace-gateway
    hostname: ace-gateway
    #   restart: always
    ports:
      - 9500:9500
    depends_on:
      - consul-1
      - consul-2
      - consul-3
      - zipkin
    networks:
      - ace-network

  ace-client:
    build:
      context: ./ace-client
      dockerfile: Dockerfile
    container_name: ace-client
    hostname: ace-client
    # restart: always
    ports:
      - 80:8090
    depends_on:
      - consul-1
      - consul-2
      - consul-3
      - zipkin
    networks:
      - ace-network

  #  ace-client-2:
  #    build:
  #      context: ./ace-client
  #      dockerfile: Dockerfile
  #    container_name: ace-client-2
  #    # restart: always
  #    ports:
  #      - 8092:8090
  #    depends_on:
  #      - consul-1
  #      - consul-2
  #      - consul-3
  #      - redis
  #      - zipkin
  #    networks:
  #      - ace-network

  ace-entities-module-1:
    build:
      context: ./ace-entities-module
      dockerfile: Dockerfile
    container_name: ace-entities-module-1
    hostname: ace-entities-module-1
    # restart: always
    environment:
      - SERVICE_NAME=ace-entities-module-1
      - SERVICE_PORT=8000
    ports:
      - 8001:8000
    depends_on:
      - consul-1
      - consul-2
      - consul-3
      - mysql8
      - zipkin
      - ace-gateway
    networks:
      - ace-network

  ace-entities-module-2:
    build:
      context: ./ace-entities-module
      dockerfile: Dockerfile
    container_name: ace-entities-module-2
    hostname: ace-entities-module-2
    #  restart: always
    environment:
      - SERVICE_NAME=ace-entities-module-2
      - SERVICE_PORT=8000
    ports:
      - 8002:8000
    depends_on:
      - consul-1
      - consul-2
      - consul-3
      - mysql8
      - zipkin
      - ace-gateway
    networks:
      - ace-network

  ace-entities-module-3:
    build:
      context: ./ace-entities-module
      dockerfile: Dockerfile
    container_name: ace-entities-module-3
    hostname: ace-entities-module-3
    #  restart: always
    environment:
      - SERVICE_NAME=ace-entities-module-3
      - SERVICE_PORT=8000
    ports:
      - 8003:8000
    depends_on:
      - consul-1
      - consul-2
      - consul-3
      - mysql8
      - zipkin
      - ace-gateway
    networks:
      - ace-network


